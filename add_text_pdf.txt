from PyPDF2 import PdfWriter, PdfReader, Transformation
import io
from reportlab.pdfgen.canvas import Canvas
import os

class GenerateFromTemplate:
    def __init__(self,template):
        self.template_pdf = PdfReader(open(template, "rb"))
        self.template_page= self.template_pdf.pages[0]

        self.packet = io.BytesIO()
        self.c = Canvas(self.packet,pagesize=(self.template_page.mediabox.width,self.template_page.mediabox.height))

    
    def addText(self,text,point):
        self.c.drawString(point[0],point[1],text)

    def merge(self):
        self.c.save()
        self.packet.seek(0)
        result_pdf = PdfReader(self.packet)
        result = result_pdf.pages[0]

        self.output = PdfWriter()

        op = Transformation().rotate(0).translate(tx=0, ty=0)
        result.add_transformation(op)
        self.template_page.merge_page(result)
        self.output.add_page(self.template_page)
    
    def generate(self,dest):
        outputStream = open(dest,"wb")
        self.output.write(outputStream)
        outputStream.close()

if __name__=='__main__':
    INPUT_DIR=r"D:\testing 2\output"
    OUTPUT_DIR=r"C:\Users\Admin\Desktop\Added_text"
    for dirpath,dirname,filenames in os.walk(INPUT_DIR):
        for filename in [f for f in filenames if f.endswith(".pdf")]:
            source=os.path.join(dirpath,filename)
            gen = GenerateFromTemplate(source)
            gen.addText("Hello This is the pdf with text!",(100,200))
            gen.merge()
            # print(os.path.join(OUTPUT_DIR,filename))
            destination_path=os.path.join(OUTPUT_DIR,filename)
            gen.generate(destination_path)